---
import { StatsService } from '../lib/stats-service';
import { DataService } from '../lib/data-service';
import type { AttackerStats, AttackResult } from '../lib/stats-service';
import '../styles/index.css';

// Get all dinosaurs with slugs for linking
let data = new DataService();
let stats = new StatsService(data, 99999);

function round2(num: number): number {
	return Math.round(num * 100) / 100
}
function round(num: number): number {
	return Math.round(num)
}
await Deno.writeTextFile("./dist/data.json",JSON.stringify(stats.table));
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Horus heresy weapons stats table</title>
	</head>
	<body class="index">
		<div class="container">
		<h1>Horus heresy weapons stats table</h1>
		{
			stats.table.map((atk: AttackerStats) => (
				<table class="table">
					<tbody>
						<tr>
							<th colspan="99">{atk.attacker.name}{atk.attacker.squadSize > 1 ? ` (${atk.attacker.squadSize})` : ``}</td>
						</tr>
						<tr>
							<th>Weapon</th>
							<th>Target</th>
							<th>Median shot to kill squad</th>
							<th>Median killed per squad </th>
							<th>Mean pts killed per 100pts</th>
						</tr>
						{
							atk.results.map((results: AttackResult) => <tr>
								<td>{results.weapon.name}</td>
								<td>{results.target.name}{results.target.squadSize > 1 ? ` (${results.target.squadSize})` : ``}</td>
								<td>{round(results.stats.medianToKillSquad)}</td>
								<td>{round2(results.stats.meanKilledPerSquad)}</td>
								<td>{round(results.stats.meanPtsKilledPer100pt)}</td>
							</tr>
						)}
					</tbody>
				</table>
			))
		}
		
		</div>
	</body>
</html>
